generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.Timestamptz(6)
  is_superuser               Boolean
  username                   String                       @unique @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.Timestamptz(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]

  @@index([username], map: "auth_user_username_6821ab7c_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_groups {
  id         BigInt     @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544")
  @@index([user_id], map: "auth_user_groups_user_id_6a12ed8b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permissions_permission_id_1fbb5f2c")
  @@index([user_id], map: "auth_user_user_permissions_user_id_a95ead1b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model clean_form_13f_stock_manager {
  id                          BigInt                      @id @default(autoincrement())
  name                        String                      @db.VarChar
  stock_id                    BigInt
  scraped_form_13f_investment scraped_form_13f_investment @relation(fields: [stock_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "clean_form_13f_stock_stock_id_e5ed04ce_fk_scraped_f")

  @@unique([stock_id, name], map: "unique_clean_form_13f_stock_manager")
  @@index([stock_id], map: "clean_form_13f_stock_manager_stock_id_e5ed04ce")
  @@index([stock_id], map: "clean_form__stock_i_203fb8_idx")
}

model current_investments {
  stock_id                 BigInt    @id
  investor_cik             String?   @db.VarChar(13)
  investor_name            String?
  investor_former_names    Json?
  investor_country         String?   @db.VarChar
  investor_region          String?   @db.VarChar
  other_investor_numbers   Json?
  other_investor_names     String[]  @db.VarChar
  form_accession_number    String?
  form_report_date         DateTime? @db.Date
  form_filing_date         DateTime? @db.Date
  stock_issuer             String?
  stock_cusip              String?   @db.VarChar(9)
  stock_figi               String?   @db.VarChar
  stock_ticker             String?   @db.VarChar
  stock_description        String?
  stock_value_x1000        BigInt?
  stock_shares_prn_amt     BigInt?
  stock_prn_amt            String?   @db.VarChar
  stock_voting_auth_sole   BigInt?
  stock_voting_auth_shared BigInt?
  stock_voting_auth_none   BigInt?
  stock_exchange_codes     Json?
  form_url                 String?   @db.VarChar(200)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.Timestamptz(6)
  object_id           String?
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.SmallInt
  change_message      String
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String
  expire_date  DateTime @db.Timestamptz(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
  @@index([session_key], map: "django_session_session_key_c0390e0f_like")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model dummy {
  stock_id                 BigInt?
  investor_cik             String?   @db.VarChar(13)
  investor_name            String?
  investor_former_names    Json?
  investor_country         String?   @db.VarChar
  investor_region          String?   @db.VarChar
  other_investor_numbers   Json?
  other_investor_names     String[]  @db.VarChar
  form_accession_number    String?
  form_report_date         DateTime? @db.Date
  form_filing_date         DateTime? @db.Date
  stock_issuer             String?
  stock_cusip              String?   @db.VarChar(9)
  stock_figi               String?   @db.VarChar
  stock_ticker             String?   @db.VarChar
  stock_description        String?
  stock_value_x1000        BigInt?
  stock_shares_prn_amt     BigInt?
  stock_prn_amt            String?   @db.VarChar
  stock_voting_auth_sole   BigInt?
  stock_voting_auth_shared BigInt?
  stock_voting_auth_none   BigInt?
  stock_exchange_codes     Json?
  form_url                 String?   @db.VarChar(200)

  @@ignore
}

model edgar_cusip_mapping {
  id                   BigInt @id(map: "cusip_mapping_pkey") @default(autoincrement())
  name                 String @db.VarChar
  cusip                String @unique(map: "unique_edgar_cusip_mapping") @db.VarChar
  figi                 String @db.VarChar
  composite_figi       String @db.VarChar
  share_class_figi     String @db.VarChar
  ticker               String @db.VarChar
  exchange_codes       Json
  market_sector        String @db.VarChar
  security_type        String @db.VarChar
  security_type_2      String @db.VarChar
  security_description String @db.VarChar
}

model edgar_place_code {
  id      BigInt @id @default(autoincrement())
  code    String @unique(map: "unique_edgar_place_code") @db.VarChar
  country String @db.VarChar
  state   String @db.VarChar

  @@unique([country, state], map: "unique_edgar_place")
}

model scraped_company {
  id                      BigInt                    @id @default(autoincrement())
  cik                     String                    @unique(map: "unique_scraped_company_cik") @db.VarChar(13)
  name                    String
  former_names            Json
  street                  String                    @db.VarChar
  secondary               String                    @db.VarChar
  city                    String                    @db.VarChar
  state_or_country        String                    @db.VarChar
  zip_code                String                    @db.VarChar
  scraped_form_submission scraped_form_submission[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model scraped_form_13f_investment {
  id                           BigInt                         @id @default(autoincrement())
  issuer_name                  String                         @db.VarChar
  title_class                  String                         @db.VarChar
  cusip                        String                         @db.VarChar(9)
  value_x1000                  BigInt
  shares_prn_amt               BigInt
  sh_prn                       String                         @db.VarChar
  put_call                     String                         @db.VarChar
  investment_discretion        String                         @db.VarChar
  other_manager                String                         @db.VarChar
  voting_auth_sole             BigInt?
  voting_auth_shared           BigInt?
  voting_auth_none             BigInt?
  filing_id                    BigInt
  clean_form_13f_stock_manager clean_form_13f_stock_manager[]
  scraped_form_submission      scraped_form_submission        @relation(fields: [filing_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scraped_form_13f_inv_filing_id_a5a94b71_fk_scraped_f")

  @@unique([filing_id, cusip, investment_discretion, other_manager], map: "unique_scraped_form_13f_stock")
  @@index([filing_id], map: "scraped_form_13f_investment_filing_id_a5a94b71")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model scraped_form_13f_manager {
  id                      BigInt                  @id(map: "scrape_scrapedform13fmanager_pkey") @default(autoincrement())
  name                    String                  @db.VarChar
  number                  Int
  filing_id               BigInt
  scraped_form_submission scraped_form_submission @relation(fields: [filing_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scrape_scrapedform13_filing_id_b78c5b70_fk_scraped_f")

  @@index([filing_id], map: "scrape_scrapedform13fmanager_filing_id_b78c5b70")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model scraped_form_submission {
  id                          BigInt                        @id @default(autoincrement())
  form                        String
  accession_number            String                        @unique(map: "unique_scraped_filing_accession_number")
  report_date                 DateTime?                     @db.Date
  filing_date                 DateTime?                     @db.Date
  url                         String                        @db.VarChar(200)
  company_id                  BigInt
  scraped_form_13f_investment scraped_form_13f_investment[]
  scraped_form_13f_manager    scraped_form_13f_manager[]
  scraped_company             scraped_company               @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scraped_form_submiss_company_id_01655838_fk_scraped_c")

  @@index([company_id], map: "scraped_form_submission_company_id_01655838")
}

model task {
  id                 String    @id @db.Uuid
  workflow_execution String    @db.VarChar
  type               String    @db.VarChar
  status             String    @db.VarChar
  started_at_utc     DateTime  @db.Timestamptz(6)
  ended_at_utc       DateTime? @db.Timestamptz(6)
  last_error_at_utc  DateTime? @db.Timestamptz(6)
  error              String
  url                String?   @db.VarChar(200)
  num_retries        Int

  @@unique([workflow_execution, type, url], map: "unique_task")
}
